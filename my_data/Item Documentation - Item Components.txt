Item Documentation - Item Components
Article
14/12/2023
4 contributeurs
Below is a list of all the available Item Components within Minecraft: Bedrock Edition for use with Item JSON files.

Name	Default Value	Type	Description
description	not set	JSON Object	A list of characters representing an item. The description MUST contain an identifier; other fields are optional.
minecraft:allow_off_hand	not set	JSON Object	Determine whether an item can be placed in the off-hand slot of the inventory.
minecraft:block_placer	not set	JSON Object	Block Placer item component. Items with this component will place a block when used. Experimental toggles required: Holiday Creator Features (in format versions before 1.20.10).
minecraft:can_destroy_in_creative	not set	JSON Object	Determines if the item will break blocks in Creative Mode while swinging.
minecraft:cooldown	not set	JSON Object	Cool down time for a component. After use, all items in a specified 'cool down category' become unusable for a determined amount of time defined in the component. In format versions before 1.20.10, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:damage	not set	JSON Object	Determines how much extra damage the item does on attack.
minecraft:display_name	not set	JSON Object	Defines the text shown when an item name is shown, such as hover text. In format versions prior to 1.20.0, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:durability	not set	JSON Object	Determines how much damage the item can take before breaking, and allows the item to be combined in crafting. In format versions prior to 1.20.0, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:enchantable	not set	JSON Object	Determines what enchantments can be applied to the item. Not all enchantments will have an effect on all item components.
minecraft:entity_placer	not set	JSON Object	Allows the item to place specified entities into the world. In format versions prior to 1.20.0, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:food	not set	JSON Object	When an item has a food component, it becomes edible to the player. Must have the minecraft:use_modifiers component in order to function properly.
minecraft:fuel	not set	JSON Object	Allows the item to be used as fuel in a furnace to 'cook' other items. In format versions prior to 1.20.0, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:glint	not set	JSON Object	Determines whether the item has the enchanted glint render effect on it.
minecraft:hand_equipped	not set	JSON Object	Determines if an item is rendered like a tool while in hand.
minecraft:hover_text_color	not set	JSON Object	Determines the color of the item name when hovering over it.
minecraft:icon	not set	JSON Object	Determines the icon to represent the item in the UI and elsewhere. In format versions before 1.20.10, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:interact_button	not set	JSON Object	This component is a boolean or string that determines if the interact button is shown in touch controls and what text is displayed on the button. When set to 'true', default 'Use Item' text will be used.
minecraft:item	not set	JSON Object	A definition of the item, including the 'description' and 'components' sections of the item file.
minecraft:liquid_clipped	not set	JSON Object	Determines whether an item interacts with liquid blocks on use.
minecraft:max_stack_size	not set	JSON Object	Determines how many of the item can be stacked.
minecraft:projectile	not set	JSON Object	Projectile item component. Projectile items shoot out, like an arrow. In format versions prior to 1.20.10, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:record	not set	JSON Object	The icon item component determines the icon to represent the item in the UI and elsewhere. In format versions prior to 1.20.0, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:repairable	not set	JSON Object	Repairable item component: Determines which items can be used to repair a defined item, as well as the amount of durability specified items will repair. In format versions prior to 1.20.10, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:shooter	not set	JSON Object	Shooter Item Component. Must have the minecraft:use_modifiers component in order to function properly. In format versions prior to 1.20.10, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:should_despawn	not set	JSON Object	Determines whether an item should eventually despawn while floating in the world.
minecraft:stacked_by_data	not set	JSON Object	Determines if the same item with different aux values can stack. Additionally, defines whether the item actors can merge while floating in the world.
minecraft:tags	not set	JSON Object	The tags component determines which tags are attached to an item.
minecraft:throwable	not set	JSON Object	Throwable item component. Throwable items, such as a snowball. In format versions prior to 1.20.10, this component requires the 'Holiday Creator Features' experimental toggle.
minecraft:use_animation	not set	JSON Object	Determines which animation plays when using an item.
minecraft:use_modifiers	not set	JSON Object	Modifies use effects, including how long an item takes to use and the player's speed when used in combination with components like Shooter, Throwable or Food.
minecraft:wearable	not set	JSON Object	Determines where the item can be worn. If any non-hand slot is chosen, the max stack size is set to 1. Experimental toggles required: Holiday Creator Features.