Entity Documentation - Filter list
Article
19/09/2023
6 contributeurs
Below is a list of all the available filters within Minecraft: Bedrock Edition for use with Entity JSON files.

Filter	Description
actor_health	actor_health allows a creator to test the health of an entity.
all_slots_empty	Returns true when the designated equipment location for the subject entity is completely empty.
any_slot_empty	Returns true when the designated equipment location for the subject entity has any empty slot.
bool_property	bool_property allows a creator to compare an entity property to a boolean value.
clock_time	clock_time allows a creator to compare the current time with a float value in the range (0.0, 1.0).
distance_to_nearest_player	distance_to_nearest_player compares the distance to the nearest player with a float value.
enum_property	enum_property allows a creator to compare an entity property to an enum value.
float_property	float_property allows a creator to compare an entity property to a float value.
has_ability	Returns true when the subject entity has the named ability.
has_biome_tag	Tests whether the biome the subject is in has the specified tag.
has_component	Returns true when the subject entity contains the named component.
has_container_open	Returns true when the subject player entity has opened a container.
has_damage	Returns true when the subject entity receives the named damage type.
has_equipment	Tests for the presence of a named item in the designated slot of the subject entity.
has_mob_effect	Tests whether the Subject has the specified mob effect.
has_nametag	Returns true when the subject entity contains the named component.
has_property	Tests for the presence of a property of the subject entity.
has_ranged_weapon	Returns true when the subject entity is holding a ranged weapon like a bow or crossbow.
has_silk_touch	Tests if the subject is holding an item with silk touch.
has_tag	Returns true if the subject entity has the tag provided.
has_target	Returns true if the subject entity has a valid target.
has_trade_supply	Tests whether the target has any trade supply left. Will return false if the target cannot be traded with.
hourly_clock_time	Compares the current 24 hour time with an int value in the range[0, 24000]
in_block	Returns true when the subject entity is inside a specified Block type.
in_caravan	Returns true if the subject entity is in a caravan.
in_clouds	Returns true when the subject entity is in the clouds.
in_contact_with_water	Returns true when the subject entity in contact with any water: water, rain, splash water bottle.
in_lava	Returns true when the subject entity is in lava.
in_nether	Returns true when the subject entity is in Nether.
in_water_or_rain	Returns true when the subject entity is in water or rain.
in_water	Returns true when the subject entity is in water.
inactivity_timer	Tests if the specified duration in seconds of inactivity.
int_property	Returns true when the int entity property matches the value provided.
is_altitude	Tests the current altitude against a provided value.
is_avoiding_mobs	Returns true if the subject entity is fleeing from other mobs.
is_baby	Returns true when the subject entity is a baby.
is_biome	Tests whether the Subject is currently in the named biome.
is_block	Returns true when the block has the given name.
is_brightness	Tests the current brightness against a provided value in the range (0.0, 1.0).
is_climbing	Returns true if the subject entity is climbing.
is_color	Returns true if the subject entity is the named color.
is_daytime	Returns true during the daylight hours.
is_difficulty	Tests the current difficulty level of the game.
is_family	Returns true when the subject entity is a member of the named family.
is_game_rule	Tests whether a named game rule is active.
is_humid	Tests whether the subject is in an area with humidity.
is_immobile	Returns true if the subject entity is immobile. An entity is immobile if it lacks AI goal components, has just changed dimensions, or if it is a mob and has no health.
is_in_village	Tests whether the Subject is inside the bounds of a village.
is_leashed	Returns true if the subject entity is leashed.
is_leashed_to	Returns true if the subject entity leashed to the calling entity.
is_mark_variant	Returns true if the subject entity is the mark variant number provided.
is_missing_health	Tests if the subject is not at full health.
is_moving	Returns true if the subject entity is moving.
is_owner	Returns true if the subject entity is the owner of the calling entity.
is_persistent	Tests if the subject's persistence matches the bool value passed in.
is_raider	Returns true if the subject entity is a raider.
is_riding	Returns true if the subject entity is riding on another entity.
is_skin_id	Returns true if the subject entity uses the skin id number provided.
is_sleeping	Tests whether the subject is sleeping.
is_sneak_held	Returns true if the subject entity has the sneak input held.
is_sneaking	Tests whether the subject is sneaking.
is_snow_covered	Tests whether the subject is in an area covered by snow.
is_target	Returns true if the subject entity is the target of the calling entity.
is_temperature_type	Tests whether the current temperature is a given type.
is_temperature_value	Tests the current temperature against a provided value in the range (0.0, 1.0) where 0.0 is the coldest temp and 1.0 is the hottest.
is_underground	Returns true when the subject entity is underground. An entity is considered underground if there are non-solid blocks above it.
is_underwater	Returns true when the subject entity is under water.
is_variant	Returns true if the subject entity is the variant number provided.
is_visible	Returns true if the subject entity is visible.
is_waterlogged	Tests if the subject block is submerged in water.
light_level	Tests if the entity is outside of the specified light level range. The range is set between 0 and 16.
moon_intensity	Compares the current moon intensity with a float value in the range of 0.0 and 1.0
moon_phase	Compares the current moon intensity with a float value in the range of 0.0 and 1.0
on_fire	Tests if the subject is on fire.
on_ground	Returns true when the subject entity is on the ground.
on_hot_block	Tests if the subject is on a hot block.
on_ladder	Returns true when the subject entity is on a ladder.
random_chance	Returns true if the random chance rolls 0 out of a specified max range.
rider_count	Returns the number of riders on this entity.
surface_mob	Tests if the subject is a surface mob.
target_distance	Tests the distance between the calling entity and its target.
trusts	Returns true if the subject is trusted by entity.
weather_at_position	Tests the current weather, at the entities position, against a provided weather value.
weather	Tests for the current weather state the entity is experiencing.